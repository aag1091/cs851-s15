Thanks to everyone that submitted or just played along with the SANS DFIR Network Forensic Challenge! We had over 3,000 evidencedownloads, and more than 500 submissions! Per the rules, the winner must have answered four of the six questions correctly. Then, by random selectionamong those submissions, the winner was selected.We're excited to announce thatHenry van Jaarsveld is the winner for this challenge! Congratulations, and we hope you enjoy your SANS OnDemand Course. Great work, Henry!Thanks for all the submissions and interest in this challenge. If you enjoyed the questions- no matter how many questions you answered - you should check out FOR572: Advanced Network Forensics and Analysis. The class is available via OnDemand, as well as the following live and virtual SANS events:More live and virtual/remote events are being added all the time, so keepchecking the course page for additional offerings.The challenge answers are listed below:At what time (UTC, including year) did the portscanning activity from IP address 123.150.207.231 start?Answer: Aug 29 2013 13:58:55 UTCPortscanning activity is typically characterized by connection attempts to a range of ports. This is often repaid and originates from the same IP address. Some scanning utilities may or may not use the same source port or a small cluster of source ports. In this case, the following command get you started:However, we've asked for the time in UTC, which is the only recommended time zone to use for forensic reporting. To find the offset, examine the same "messages" file further. This isn't often an explicitly logged value, so context is necessary. The following line shows the syslog time (system local time) and a corresponding UTC value. Therefore, it is reasonable to state that the system's time zone is UTC-4 during the time the file was created.-n: suppress DNS lookups-r nitroba.pcap: file to read-T fields: use "fields" output format-e ip.src: output just the "ip.src" field, as defined by the Wireshark/tshark parsers-Y 'eth.src == 00:1f:f3:5a:77:9b and ip': display filter to limit results to the MAC address of interest and IP traffic, which would be the only traffic to include IP addresses| sort | uniq: bash shell utilities to narrow results to only unique valuesWhat IP (source and destination) and TCP ports (source and destination) are used to transfer the "scenery-backgrounds-6.0.0-1.el6.noarch.rpm" file?Answer: 149.20.20.135 and 192.168.75.29, 30472 and 51851Again, the tshark utility is your friend. This is as a multiple-stage process. First, get the frame number containingthe desired request. This command returns frame number 5846.How many IP addresses attempted to connect to destination IP address 63.141.241.10 on the default SSH port?Answer: 49A connection attempt may or may not be successful, so we can simply limit our search to the high-level filtering provided by nfdump. You could use grep against the text file as well.There are 55 total connections:-q: "quiet" output, which suppresses summary header/footer information-O tstart: order output by "start time" of each record-r nfcapd.201405230000: input file to read-o 'fmt:%sa': only display the source IP address for each record'dst ip 63.141.241.10 and dst port 22': limit flows to those from the IP address of interest, to the default SSH port. You might also limit by TCP protocol by adding "and proto tcp"| wc -l: count the resultsAfter opening the file, you must explore the SMB session - which is not at all a simple process. In the input file generated above, the message we're interested in is the Trans2 Response message containing Standard File Info for the file of interest. This occurs in frame 749 (frame.time = Apr 5, 2012 14:21:50.574112000). By spelunking the available fields, you'll find the "End of File" value, which is 13,625. This represents the number of bytes in the file. Note that the Wireshark status bar tells us that Wireshark knows this field by the name "smb.end_of_file", which could be used to scale this process out via the tshark utility.The traffic in this Snort IDS pcap log contains traffic that is suspected to be a malware beaconing. Identify the substring and offset for a common substring that would support a unique Indicator Of Compromise for this activity.There are a number of ways to approach this. The goal is to identify commonalities among the individual sessions, even though we are not (yet) sure what the bytes mean.This evidence file is small enough to load into Wireshark, then visually explore the content - despite Wireshark not knowing the content is anything other than generic "Data".After visually inspecting these fields in the traffic the IDS logged, you should see that bytes 4-10 (zero-based, of course) seem consistent. This can be confirmed with the following display filter:data.data[4-10] == 55:4c:51:45:4e:50:32After applying this filter, you can quickly see that 100% of the packets in the IDS log file match. Expanding the filter one byte before or after this substring range results in a <100% match. Barring any additional knowledge of the custom protocol used for these communications, this substring and offset would be a good indicator of compromise.BONUS!Identify the meaning of the bytes that precede the substring above.Answer: UNIX TimestampThere is a no magic solution here - just trial and error combined with experience. The UNIX timestamp (number of seconds after Jan 1, 1970 at 00:00:00 UTC) fits into four bytes. Those with a keen eye for timestamps will see that after converting any given four byte sequence to a big-endian integer, then converting that to a timestamp, the Wireshark/tshark "frame.time" field value corresponds almost perfectly in every case. For example:Phil HagenHi, Ron - this comment just popped up on the blog side. I believe I got the breakdown of the answer to you via twitter, but just in case:There were 55 total connection attempts from 49 unique IPs. Commands for this question are here: http://pastebin.com/pMdA785W and I've added background to the cross-post, here: http://lewestech.com/2015/02/2015-network-challenge-results/(Working to get these posted on this blog in parallel.)Phil HagenHi, Josh - good catch on the erroneous sentence on #1. That was an editing artifact and I've removed it.For #3, the "dstaddr" was also an error - it should have been "dstport". Earlier versions of tshark (we used 1.10.7 at the time) did not error out when using a nonexistent field. Sounds like you've got a newer version that does the job better! I've updated the command to reflect the change, though - thanks again!Latest Papers"Rob has insight that few others have and that alone is worth the cost of the the course."- Chris Spurrier, Xerox Corp"For my line of work, basic &amp;amp; extensive understanding of the file system is extremely important. The literature and books on file systems for me are very critical &amp;amp; thanks you for them, great reference material"- Vince Ramirez, Las Vegas Metro P.D."Rob Lee is a master of the subject matter. The material is presented in a way that is understandable. Rob is also charismatic enough to make the course enjoyable."- Erik Ketlet, JP Morgan Chase